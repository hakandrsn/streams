{"ast":null,"code":"import streams from \"../apis/streams\";\nimport history from \"../history\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from \"./types\";\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth;\n  const response = await streams.post(\"/streams\", { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  }); // programmatic navigation yapıyoruz ve bu işlem\n  // gerçekleştiğinde yönlendirme yapacağız!\n\n  history.push('/');\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get(\"/streams\");\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["C:/Users/hakan/Desktop/Proje/ReactJS/streams/client/src/actions/index.js"],"names":["streams","history","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","push","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SACIC,OADJ,EAEIC,QAFJ,EAGIC,aAHJ,EAIIC,aAJJ,EAKIC,YALJ,EAMIC,aANJ,EAOIC,WAPJ,QAQO,SARP;AAWA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAO;AAAEC,IAAAA,IAAI,EAAET,OAAR;AAAiBU,IAAAA,OAAO,EAAEF;AAA1B,GAAP;AACH,CAFM;AAIP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AAAEF,IAAAA,IAAI,EAAER;AAAR,GAAP;AACH,CAFM;AAIP,OAAO,MAAMW,YAAY,GAAGC,UAAU,IAAI,OAAOC,QAAP,EAAgBC,QAAhB,KAA6B;AACnE,QAAM;AAACP,IAAAA;AAAD,MAAWO,QAAQ,GAAGC,IAA5B;AACA,QAAMC,QAAQ,GAAG,MAAMnB,OAAO,CAACoB,IAAR,CAAa,UAAb,EAAyB,EAAC,GAAGL,UAAJ;AAAeL,IAAAA;AAAf,GAAzB,CAAvB;AACAM,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEP,aAAR;AAAuBQ,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,GAAD,CAAR,CAHmE,CAInE;AACA;;AACApB,EAAAA,OAAO,CAACqB,IAAR,CAAa,GAAb;AACH,CAPM;AASP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMP,QAAN,IAAkB;AAChD,QAAMG,QAAQ,GAAG,MAAMnB,OAAO,CAACwB,GAAR,CAAY,UAAZ,CAAvB;AACAR,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEN,aAAR;AAAuBO,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMI,WAAW,GAAGC,EAAE,IAAI,MAAMV,QAAN,IAAkB;AAC/C,QAAMG,QAAQ,GAAG,MAAMnB,OAAO,CAACwB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AACAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEL,YAAR;AAAsBM,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACH,CAHM;AAMP,OAAO,MAAMM,UAAU,GAAG,CAACD,EAAD,EAAKX,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC5D,QAAMG,QAAQ,GAAG,MAAMnB,OAAO,CAAC4B,GAAR,CAAa,YAAWF,EAAG,EAA3B,EAA8BX,UAA9B,CAAvB;AACAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEH,WAAR;AAAqBI,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMQ,YAAY,GAAGH,EAAE,IAAI,MAAMV,QAAN,IAAkB;AAChD,QAAMhB,OAAO,CAAC8B,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AACAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEJ,aAAR;AAAuBK,IAAAA,OAAO,EAAEc;AAAhC,GAAD,CAAR;AACH,CAHM","sourcesContent":["import streams from \"../apis/streams\"\r\nimport history from \"../history\"\r\nimport {\r\n    SIGN_IN,\r\n    SIGN_OUT,\r\n    CREATE_STREAM,\r\n    FETCH_STREAMS,\r\n    FETCH_STREAM,\r\n    DELETE_STREAM,\r\n    EDIT_STREAM\r\n} from \"./types\"\r\n\r\n\r\nexport const signIn = (userId) => {\r\n    return { type: SIGN_IN, payload: userId }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return { type: SIGN_OUT }\r\n}\r\n\r\nexport const createStream = formValues => async (dispatch,getState) => {\r\n    const {userId} = getState().auth\r\n    const response = await streams.post(\"/streams\", {...formValues,userId})\r\n    dispatch({ type: CREATE_STREAM, payload: response.data })\r\n    // programmatic navigation yapıyoruz ve bu işlem\r\n    // gerçekleştiğinde yönlendirme yapacağız!\r\n    history.push('/');\r\n}\r\n\r\nexport const fetchStreams = () => async dispatch => {\r\n    const response = await streams.get(\"/streams\")\r\n    dispatch({ type: FETCH_STREAMS, payload: response.data })\r\n}\r\n\r\nexport const fetchStream = id => async dispatch => {\r\n    const response = await streams.get(`/streams/${id}`)\r\n    dispatch({ type: FETCH_STREAM, payload: response.data })\r\n}\r\n\r\n\r\nexport const editStream = (id, formValues) => async dispatch => {\r\n    const response = await streams.put(`/streams/${id}`, formValues)\r\n    dispatch({ type: EDIT_STREAM, payload: response.data })\r\n}\r\n\r\nexport const deleteStream = id => async dispatch => {\r\n    await streams.delete(`/streams/${id}`);\r\n    dispatch({ type: DELETE_STREAM, payload: id })\r\n}"]},"metadata":{},"sourceType":"module"}